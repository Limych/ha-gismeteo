#!/usr/bin/env bash
# Install component requirements.
# Require requirements.txt file path as first argument
# and GitHub access token as second argument.

# Stop on errors
set -e

ROOT="$( cd "$( dirname "$(readlink -f "$0")" )/.." >/dev/null 2>&1 && pwd )"
cd "${ROOT}"

file="requirements.txt"
token="nonexistent"
flags=()

while test $# -gt 0; do
    case "${1}" in
        --pre)
            flags+=("${1}")
            ;;
        *)
            if test "${token}" != "nonexistent"; then
                file="${token}"
            fi
            token="${1}"
            ;;
    esac
    shift
done

python=$(which python3)
pip="${python} -m pip"

REQ=$(cat "${file}")
while true; do
    FILES=$(echo "${REQ}" | grep "^-r " | sed "s/^-r\\s\+//g")
    if test -z "${FILES}"; then
        break
    fi
    for FILE in ${FILES}; do
        FILE_R=$(echo "${FILE}" | sed "s/\\./\\\\./g")
        REQ=$(echo "${REQ}" | sed -e "/^-r\\s\+${FILE_R}/{r ${FILE}" -e "d" -e "}")
    done
done
GIT=$(echo "${REQ}" | grep "{GITHUB_TOKEN}" | tr '\r\n' ' ')
REQ=$(echo "${REQ}" | grep -v "{GITHUB_TOKEN}" | tr '\r\n' ' ')

if test -n "${GIT}"; then
    GIT=$(echo "${GIT}" | sed "s/{GITHUB_TOKEN}/${token}/g")
    REQ="${GIT} ${REQ}"
fi

${pip} install ${flags} --upgrade ${REQ}
