#!/usr/bin/env bash

# Stop on errors
set -e

ROOT="$( cd "$( dirname "$(readlink -f "$0")" )/.." >/dev/null 2>&1 && pwd )"
cd "${ROOT}"

# Load common functions
source ./bin/_common

if output=$(git branch --show-current) \
&& [[ "$output" != "master" && "$output" != "main" ]]; then
    log.fatal "Please, change HEAD to 'master' or 'main' branch."
    log.info "At now HEAD at '${output}' branch."
    exit 1
fi
if output=$(git status --porcelain) && [[ -n "$output" ]]; then
    log.fatal "Please, make working tree clean first."
    log.info ${output}
    exit 2
fi

const_path=$(find custom_components/ -name const.py)
version=$(grep "^VERSION =" ${const_path} | sed -E "s/^[^\"]+\"([^\"]*).*$/\\1/")

if [[ -z $1 ]]; then
    log.fatal "Please, describe new version number as first argument."
    log.info "Current version number is ${version}"
    exit 3
fi

new=$(echo "${1}" | sed -E "s/\+.*//")

log.info "Patch files to version '${new}'..."
sed -i -E "s/(^VERSION = \")[^\"]*/\\1${new}/" ${const_path}
./bin/update_manifest
git commit -a --no-verify -m "Bump version"
git tag -a "$new" -m "v$new"
log.info "Commit tagged as v$new"

if echo "${new}" | grep -Eq "[0-9](a|b|rc)"; then
    dev="$(echo "${version}" | sed "s/dev//" | awk -F. '/[0-9]+\./{$NF="dev"($NF+1);print}' OFS=.)"
else
    dev="$(echo "${new}" | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.).dev0"
fi

log.info "Patch files to version '${dev}'..."
sed -i -E "s/(^VERSION = \")[^\"]*/\\1${dev}/" ${const_path}
./bin/update_manifest
